/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!************************!*\
  !*** ./src/colour.jsx ***!
  \************************/
// --- Observers --- //
var calendarObserver = new MutationObserver(function (mutationsList) {
  mutationsList.forEach(function (mutation) {
    applyColorsToEvents();
  });
});
var calendarObserverConfig = {
  childList: true,
  subtree: true
};
calendarObserver.observe(document, calendarObserverConfig);
var targetElement = document.getElementById("yDmH0d");
calendarObserver.observe(targetElement, calendarObserverConfig);
function applyColorsToEvents() {
  chrome.storage.local.get(null, function (items) {
    for (var eventId in items) {
      var color = items[eventId];
      if (color) {
        changeEventColor(eventId, color);
      }
    }
  });
}

// --- Event bar color change --- //
function changeEventColor(eventId, color) {
  var eventWrapperElements = document.querySelectorAll("[data-eventid=\"".concat(eventId, "\"]"));
  if (eventWrapperElements) {
    eventWrapperElements.forEach(function (eventWrapperElement) {
      changeEventMainColor(eventWrapperElement, color);
      changeEventBorderColor(eventWrapperElement, color);
      changeEventSideBarColor(eventWrapperElement, color);
      changeMaterialIconColor(eventWrapperElement, color);
    });
  }
}

// --- Color change helpers -- //

function changeEventMainColor(eventWrapperElement, color) {
  var eventElement = eventWrapperElement.querySelector(".VlNR9e");
  if (eventElement) {
    // eventElement is a dot (specific time)
    eventElement.style.borderColor = color;
  } else {
    // event Element is a bar (all day event)
    eventElement = eventWrapperElement.querySelector(".KF4T6b");
    if (eventElement) {
      eventElement.style.backgroundColor = color;
    }
  }
}
function changeMaterialIconColor(eventWrapperElement, color) {
  var materialIconElement = eventWrapperElement.querySelector(".T7dzVe");
  if (materialIconElement) {
    materialIconElement.style.backgroundColor = color;
  }
}
function changeEventSideBarColor(eventWrapperElement, color) {
  var sidebarElement = eventWrapperElement.querySelector('.pmUZFe');
  if (sidebarElement) {
    sidebarElement.style.backgroundColor = color;
  }
}
function changeEventBorderColor(eventWrapperElement, color) {
  var eventBorder = eventWrapperElement.querySelector(".PxbABe");
  if (eventBorder) {
    if (eventBorder.style.borderRightColor) {
      eventBorder.style.borderRightColor = color;
    } else if (eventBorder.style.borderLeftColor) {
      eventBorder.style.borderLeftColor = color;
    }
  }
}

// Check storage usage
chrome.storage.local.getBytesInUse(null, function (bytesUsed) {
  console.log("Storage used: " + bytesUsed + " bytes");
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,